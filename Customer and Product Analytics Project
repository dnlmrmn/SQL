-- In this project, I queried multiple tables containing customer data as well as monthly sales data. The data also needed to be filtered because of some unclean records.

-- How many orders were placed in January?
SELECT COUNT(orderid) 
FROM BIT_DB.JanSales
WHERE length(orderid) = 6 AND 
orderid <> 'Order ID';
       
-- How many of those orders were for an iPhone?
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID'
AND Product = 'iPhone';

-- Select the customer account numbers for all the orders that were placed in February.
SELECT distinct cust.acctnum
FROM BIT_DB.customers cust
INNER JOIN BIT_DB.FebSales feb ON cust.order_ID = feb.orderID
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

-- Which product was the cheapest one sold in January, and what was the price?
SELECT distinct product, price
FROM BIT_DB.JanSales
ORDER BY price ASC LIMIT 1;

-- What is the total revenue for each product sold in January?
SELECT distinct Product,
ROUND(SUM(Quantity)*price, 2) as revenue
FROM BIT_DB.JanSales
GROUP BY Product;

-- Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, 
price,
SUM(Quantity) quant,
SUM(Quantity)*price as revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY Product;

-- How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT COUNT(distinct cust.acctnum),
AVG(quantity*price)
FROM BIT_DB.FebSales feb
LEFT JOIN BIT_DB.customers cust
ON feb.orderid = cust.order_id
WHERE feb.Quantity > 2
AND length(orderid) = 6
AND orderid <> 'Order ID';

-- List all the products sold in Los Angeles in February, and include how many of each were sold.
SELECT distinct Product, SUM(Quantity) 
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP BY Product;

-- Which locations in New York received at least 3 orders in January, and how many orders did they each receive? (Hint: use HAVING).
SELECT location, COUNT(orderID)
FROM BIT_DB.JanSales
WHERE location like '%NY%'
AND length(orderid) = 6 
AND orderid <> 'Order ID'
GROUP BY location
HAVING COUNT(orderID) >= 3;

-- How many of each type of headphone were sold in February?
SELECT Product, SUM(quantity)
FROM BIT_DB.FebSales
WHERE Product like '%headphone%'
GROUP BY Product;

-- What was the average amount spent per account in February? 
-- (Hints: For this question, we want the average amount spent / number of accounts, not the amount spent by each account. To multiply, you can use the * symbol, and to divide, you can use the / symbol.)

SELECT
SUM(feb.Quantity * feb.price)/COUNT(cust.acctnum)
FROM BIT_DB.FebSales feb
LEFT JOIN BIT_DB.customers cust
ON feb.orderID = cust.order_id
WHERE length(feb.orderID = 6)
AND feb.orderID <> 'Order ID';

-- What was the average quantity of products purchased per account in February? (Hint: just like question 3, we want the overall average, not the average for each account individually).

SELECT
SUM(feb.Quantity)/COUNT(cust.acctnum)
FROM BIT_DB.FebSales feb
LEFT JOIN BIT_DB.customers cust
ON feb.orderID = cust.order_id
WHERE length(feb.orderID = 6)
AND feb.orderID <> 'Order ID';

-- Which product brought in the most revenue in January and how much revenue did it bring in total?

SELECT distinct Product
, SUM(Quantity*price) as rev
FROM JanSales
GROUP BY Product
ORDER BY rev DESC
LIMIT 1;
