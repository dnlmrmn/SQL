-- In this project, I queried multiple tables containing customer data as well as monthly sales data. The data also needed to be filtered because of some unclean records.

-- How many orders were placed in January?
SELECT COUNT(orderid) 
FROM BIT_DB.JanSales
WHERE length(orderid) = 6 AND 
orderid <> 'Order ID';
       
-- How many of those orders were for an iPhone?
SELECT COUNT(orderid)
FROM BIT_DB.JanSales
WHERE length(orderid) = 6
AND orderid <> 'Order ID'
AND Product = 'iPhone';

-- Select the customer account numbers for all the orders that were placed in February.
SELECT distinct cust.acctnum
FROM BIT_DB.customers cust
INNER JOIN BIT_DB.FebSales feb ON cust.order_ID = feb.orderID
WHERE length(orderid) = 6
AND orderid <> 'Order ID';

-- Which product was the cheapest one sold in January, and what was the price?
SELECT distinct product, price
FROM BIT_DB.JanSales
ORDER BY price ASC LIMIT 1;

-- What is the total revenue for each product sold in January?
SELECT distinct Product,
ROUND(SUM(Quantity)*price, 2) as revenue
FROM BIT_DB.JanSales
GROUP BY Product;

-- Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?
SELECT Product, 
price,
SUM(Quantity) quant,
SUM(Quantity)*price as revenue
FROM BIT_DB.FebSales
WHERE location = '548 Lincoln St, Seattle, WA 98101'
GROUP BY Product;

-- How many customers ordered more than 2 products at a time in February, and what was the average amount spent for those customers?
SELECT COUNT(distinct cust.acctnum),
AVG(quantity*price)
FROM BIT_DB.FebSales feb
LEFT JOIN BIT_DB.customers cust
ON feb.orderid = cust.order_id
WHERE feb.Quantity > 2
AND length(orderid) = 6
AND orderid <> 'Order ID';
