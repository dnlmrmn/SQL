-- I created a table to store the downloaded Spotify data, which I downloaded from the course repo and imported into the table

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

-- Then I queried the table, coming up with five of my own questions about what the data was telling me.

-- What's the average length of a song in minutes?
SELECT
(AVG(duration_ms)/1000)/60 as minutes
FROM Spotifydata
;

-- What's the average length of the top 5 songs in minutes?
SELECT
(AVG(duration_ms)/1000)/60 as minutes
FROM Spotifydata
WHERE popularity IN (SELECT popularity 
FROM Spotifydata 
ORDER BY popularity DESC 
LIMIT 5)
;

-- who are the top five artists with the highest average danceability?
SELECT DISTINCT 
artist_name,
AVG(danceability) as avg_danceability
FROM Spotifydata
GROUP BY artist_name
ORDER BY avg_danceability DESC
LIMIT 5
;

-- which tracks have a higher than average value of speechiness?
SELECT track_name
FROM Spotifydata
WHERE speechiness > (SELECT AVG(speechiness) FROM Spotifydata)
;

-- which tracks have a higher than average value of speechiness and a higher than average popularity?
SELECT track_name
FROM Spotifydata
WHERE speechiness > (SELECT AVG(speechiness) FROM Spotifydata)
AND popularity > (SELECT AVG(popularity) FROM Spotifydata)
;
